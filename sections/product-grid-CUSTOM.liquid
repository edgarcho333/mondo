{{ 'product-grid-CUSTOM.css' | asset_url | stylesheet_tag }}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% schema %}
{
  "name": "Product Grid",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 12,
      "step": 4,
      "default": 4,
      "label": "Number of products to show"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Choose Your Taste"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Title Size",
      "default": 24
    },
    {
      "type": "header",
      "content": "Product 1 Settings"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Product Image 1"
    },
    {
      "type": "color",
      "id": "bg_color_1",
      "label": "Background Color 1",
      "default": "#FFF5F5"
    },
    {
      "type": "text",
      "id": "title_1",
      "label": "Product Title 1",
      "default": "Drip Coffee Mix"
    },
    {
      "type": "text",
      "id": "price_regular_1",
      "label": "Regular Price 1",
      "default": "$34.49"
    },
    {
      "type": "text",
      "id": "price_sale_1",
      "label": "Sale Price 1",
      "default": "$13.99"
    },
    {
      "type": "text",
      "id": "button_text_1",
      "label": "Button Text 1",
      "default": "ADD TO CART"
    },
    {
      "type": "text",
      "id": "button_link_1",
      "label": "Button Link 1",
      "default": "#"
    },
    {
      "type": "color",
      "id": "button_color_1",
      "label": "Button Text Color 1",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "button_bg_1",
      "label": "Button Background 1",
      "default": "#E5A1B7"
    }
  ],
  "presets": [
    {
      "name": "Product Grid (CUSTOM)",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}

<style>
.product-grid-section {
  padding: 40px 20px;
  margin: 0 auto;
}
.section-title {
  text-align: left;
  margin-bottom: 30px;
  font-weight: 500;
}
.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
}
.product-card {
  border-radius: 20px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}
.product-image {
  width: 100%;
  height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 15px;
}
.product-image img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}
.product-info {
  width: 100%;
}
.product-info h3 {
  margin: 0 0 10px 0;
  font-size: 16px;
  font-weight: 500;
}
.price {
  margin: 10px 0;
  display: flex;
  justify-content: center;
  gap: 10px;
  align-items: center;
}
.price-compare {
  color: #999;
  text-decoration: line-through;
  font-size: 14px;
}
.price-sale,
.price-regular {
  color: #000;
  font-weight: 500;
  font-size: 16px;
}
.product-grid-section .button {
  display: inline-block;
  width: 100%;
  padding: 14px 20px;
  text-decoration: none;
  border: none;
  border-radius: 50px;
  cursor: pointer;
  font-weight: 500;
  font-size: 14px;
  text-align: center;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
  background-color: #E5A1B7;
  color: white;
  margin-top: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.product-grid-section .button:hover {
  opacity: 0.9;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
}
.product-grid-section .price {
  margin-bottom: 5px;
}
.product-grid-section .price-sale {
  color: #E5A1B7;
  font-weight: bold;
}
.product-grid-section .price-compare {
  text-decoration: line-through;
  color: #999;
  margin-right: 8px;
}

/* მობილური სლაიდერის სტილები */
.product-grid-mobile {
  display: none;
}

@media screen and (max-width: 767px) {
  .product-grid {
    width: 100%;
    display: none;
  }
  
  .product-grid-mobile {
    display: block;
    width: 100%;
    padding: 0;
    overflow: hidden;
  }

  .product-grid-mobile .swiper {
    width: 100%;
    padding: 10px 0;
  }

  .product-grid-mobile .swiper-slide {
    width: auto;
  }

  .product-grid-mobile .product-card {
    width: 280px;
    margin: 0 auto;
  }

  .product-grid-mobile .product-image {
    height: 180px;
  }
  
  .section-title {
    padding: 0 20px;
  }
}

@media screen and (max-width: 374px) {
  .product-grid-mobile .product-card {
    
  }
  
  .product-grid-mobile .product-image {
    height: 160px;
  }
}
</style>

<div class="product-grid-section">
  <h2 class="section-title" style="font-size: {{ section.settings.title_size }}px">
    {{ section.settings.section_title }}
  </h2>
  
  <!-- Desktop Grid -->
  <div class="product-grid">
    {% if section.settings.collection != blank %}
      {% assign products = section.settings.collection.products | limit: section.settings.products_to_show %}
      {% for product in products %}
        <div class="product-card" style="background-color: {{ section.settings.bg_color_1 }}">
          <div class="product-image">
            {{ product.featured_image | image_url: width: 300 | image_tag }}
          </div>
          <div class="product-info">
            <h3>{{ product.title }}</h3>
            <div class="price">
              {% if product.compare_at_price_max > product.price %}
                <span class="price-compare">{{ product.compare_at_price_max | money }}</span>
                <span class="price-sale">{{ product.price | money }}</span>
              {% else %}
                <span class="price-regular">{{ product.price | money }}</span>
              {% endif %}
            </div>
            <button 
              class="button add-to-cart-button"
              style="color: {{ section.settings.button_color_1 }}; background-color: {{ section.settings.button_bg_1 }}"
              data-variant-id="{{ product.variants.first.id }}"
              {% unless product.available %}disabled{% endunless %}
            >
              {% if product.available %}
                ADD TO CART
              {% else %}
                SOLD OUT
              {% endif %}
            </button>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p>Please select a collection</p>
    {% endif %}
  </div>

  <!-- Mobile Slider -->
  <div class="product-grid-mobile">
    <div class="swiper">
      <div class="swiper-wrapper">
        {% if section.settings.collection != blank %}
          {% assign products = section.settings.collection.products | limit: section.settings.products_to_show %}
          {% for product in products %}
            <div class="swiper-slide">
              <div class="product-card" style="background-color: {{ section.settings.bg_color_1 }}">
                <div class="product-image">
                  {{ product.featured_image | image_url: width: 300 | image_tag }}
                </div>
                <div class="product-info">
                  <h3>{{ product.title }}</h3>
                  <div class="price">
                    {% if product.compare_at_price_max > product.price %}
                      <span class="price-compare">{{ product.compare_at_price_max | money }}</span>
                      <span class="price-sale">{{ product.price | money }}</span>
                    {% else %}
                      <span class="price-regular">{{ product.price | money }}</span>
                    {% endif %}
                  </div>
                  <button 
                    class="button add-to-cart-button"
                    style="color: {{ section.settings.button_color_1 }}; background-color: {{ section.settings.button_bg_1 }}"
                    data-variant-id="{{ product.variants.first.id }}"
                    {% unless product.available %}disabled{% endunless %}
                  >
                    {% if product.available %}
                      ADD TO CART
                    {% else %}
                      SOLD OUT
                    {% endif %}
                  </button>
                </div>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // კალათაში დამატების ფუნქციონალი
  const addToCartButtons = document.querySelectorAll('.add-to-cart-button');
  const miniCart = document.getElementById('t4s-mini_cart');
  
  addToCartButtons.forEach(button => {
    button.addEventListener('click', function() {
      const variantId = this.dataset.variantId;
      
      if (!this.disabled) {
        this.innerHTML = 'Adding...';
        this.disabled = true;
        
        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            items: [{
              id: variantId,
              quantity: 1
            }]
          })
        })
        .then(response => response.json())
       .then(data => {
  // მინი-კალათის გამოჩენა
  if (miniCart) {
    miniCart.classList.remove('t4s-dn');
    miniCart.setAttribute('aria-hidden', 'false');
    document.body.classList.add('t4s-overflow-hidden');

    // განვაახლოთ მინი-კალათის შიგთავსი
    fetch('/cart.js')
      .then(response => response.json())
      .then(cartData => {
        const cartItems = document.querySelector('[data-cart-items]');
        if (cartItems) {
          // ვხსნით XHR მოთხოვნას კალათის სექციის მისაღებად
          fetch('?section_id=mini-cart')
            .then(response => response.text())
            .then(html => {
              const parser = new DOMParser();
              const doc = parser.parseFromString(html, 'text/html');
              const newItems = doc.querySelector('[data-cart-items]');
              if (newItems) {
                cartItems.innerHTML = newItems.innerHTML;
              }
            });
        }
      });
  }
  
  // ღილაკის ტექსტის აღდგენა
  this.innerHTML = 'ADD TO CART';
  this.disabled = false;
})
        .catch((error) => {
          console.error('Error:', error);
          this.innerHTML = 'Error';
          setTimeout(() => {
            this.innerHTML = 'ADD TO CART';
            this.disabled = false;
          }, 1000);
        });
      }
    });
  });

  // Swiper ინიციალიზაცია მობილურისთვის
  if (window.innerWidth < 768) {
    const swiper = new Swiper('.product-grid-mobile .swiper', {
      slidesPerView: 'auto',
      centeredSlides: true,
      loop: true,
      spaceBetween: 20,
      grabCursor: true,
      initialSlide: 0,
      speed: 600,
      effect: 'slide',
      autoplay: {
        delay: 3000,
        disableOnInteraction: false,
        pauseOnMouseEnter: true
      }
    });
  }
});

// Resize ივენთის მართვა
window.addEventListener('resize', function() {
  if (window.innerWidth < 768) {
    if (!document.querySelector('.product-grid-mobile .swiper-initialized')) {
      location.reload();
    }
  }
});
</script>