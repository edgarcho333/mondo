{% schema %}
{
  "name": "Product Grid",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 12,
      "step": 4,
      "default": 4,
      "label": "Number of products to show"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Choose Your Taste"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Title Size",
      "default": 24
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button Background Color",
      "default": "#E5A1B7"
    },
    {
      "type": "color",
      "id": "sale_price_color",
      "label": "Sale Price Color",
      "default": "#E5A1B7"
    },
    {
      "type": "color",
      "id": "product_bg_color",
      "label": "Product Background Color",
      "default": "#FFF5F5"
    }
  ],
  "presets": [
    {
      "name": "Product Grid (CUSTOM)",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}

{%- style -%}
.section-container {
  padding-left: 120px;
  padding-right: 120px;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  margin: 0 auto;
  max-width: 1920px;
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  gap: 20px;
}

/* Responsive grid adjustments */
@media screen and (max-width: 1536px) {
  .product-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media screen and (max-width: 1280px) {
  .section-container {
    padding-left: 80px;
    padding-right: 80px;
  }
}

@media screen and (max-width: 1024px) {
  .product-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .section-container {
    padding-left: 60px;
    padding-right: 60px;
  }
}

@media screen and (max-width: 640px) {
  .section-container {
    padding-left: 20px;
    padding-right: 20px;
  }
  .product-grid {
    display: block !important;
    width: 100%;
    overflow: hidden;
    position: relative;
  }
  .swiper-slide {
    height: auto;
  }
}

.product-image-container {
  width: 100%;
  height: 200px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
}

.product-image-container img {
  width: auto;
  height: auto;
  max-width: 90%;
  max-height: 90%;
  object-fit: contain;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
{%- endstyle -%}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<div class="section-container py-10 px-5 mx-auto">
  <h2 class="text-left mb-8 font-medium" style="font-size: {{ section.settings.title_size }}px">
    {{ section.settings.section_title }}
  </h2>
  
  <div class="product-grid swiper">
    <div class="swiper-wrapper">
    {% if section.settings.collection != blank %}
      {% assign products = section.settings.collection.products | limit: section.settings.products_to_show %}
      {% for product in products %}
        <div class="rounded-2xl p-5 flex flex-col items-center text-center swiper-slide" style="background-color: {{ section.settings.product_bg_color }}">
          <div class="product-image-container">
            <a href="{{ product.url }}" class="block w-full h-full relative">
              <img src="{{ product.featured_image | image_url: width: 300 }}" 
                   alt="{{ product.title }}" 
                   class="transition-transform duration-300 hover:scale-105">
            </a>
          </div>
          <div class="w-full">
            <h3 class="mb-2.5">
              <a href="{{ product.url }}" class="text-base font-medium text-gray-800 hover:text-[{{ section.settings.button_bg_color }}] transition-colors duration-300">
                {{ product.title }}
              </a>
            </h3>
            <div class="flex justify-center items-center gap-2.5 mb-2.5">
              {% if product.compare_at_price_max > product.price %}
                <span class="text-sm text-gray-400 line-through">{{ product.compare_at_price_max | money }}</span>
                <span class="font-medium" style="color: {{ section.settings.sale_price_color }}">
                  {{ product.price | money }}
                  <span class="inline-block px-1.5 py-0.5 text-xs font-bold text-white rounded" style="background-color: {{ section.settings.sale_price_color }}">
                    -{{ product.compare_at_price_max | minus: product.price | times: 100.0 | divided_by: product.compare_at_price_max | round }}%
                  </span>
                </span>
              {% else %}
                <span class="text-base font-medium text-gray-800">{{ product.price | money }}</span>
              {% endif %}
            </div>
            <button 
              class="w-full py-3.5 px-5 rounded-full font-medium text-sm tracking-wider transition-all duration-300 hover:opacity-90 hover:-translate-y-0.5 shadow-sm hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
              style="color: {{ section.settings.button_text_color }}; background-color: {{ section.settings.button_bg_color }}"
              data-variant-id="{{ product.variants.first.id }}"
              {% unless product.available %}disabled{% endunless %}
            >
              {% if product.available %}
                ADD TO CART
              {% else %}
                SOLD OUT
              {% endif %}
            </button>
          </div>
        </div>
      {% endfor %}
    {% else %}
      <p class="text-gray-600">Please select a collection</p>
    {% endif %}
    </div>
  </div>
  <script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize Swiper
  if (window.innerWidth <= 640) {
    const swiper = new Swiper('.swiper', {
      slidesPerView: 1.2,
      spaceBetween: 20,
      centeredSlides: false,
      grabCursor: true,
      loop: false,
      breakpoints: {
        320: {
          slidesPerView: 1.2,
        },
        480: {
          slidesPerView: 1.5,
        }
      }
    });
  }

  const addToCartButtons = document.querySelectorAll('button[data-variant-id]');
  
  addToCartButtons.forEach(button => {
    button.addEventListener('click', function() {
      const variantId = this.dataset.variantId;
      
      if (!this.disabled) {
        this.innerHTML = 'Adding...';
        this.disabled = true;
        
        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            items: [{
              id: variantId,
              quantity: 1
            }]
          })
        })
        .then(response => response.json())
        .then(data => {
          window.location.href = '/cart';
        })
        .catch((error) => {
          console.error('Error:', error);
          this.innerHTML = 'Error';
          setTimeout(() => {
            this.innerHTML = 'ADD TO CART';
            this.disabled = false;
          }, 1000);
        });
      }
    });
  });
});
</script>
</div>